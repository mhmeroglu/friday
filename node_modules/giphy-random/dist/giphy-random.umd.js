(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('axios')) :
	typeof define === 'function' && define.amd ? define(['axios'], factory) :
	(global.GiphyRandom = factory(global.axios));
}(this, (function (axios) { 'use strict';

axios = axios && axios.hasOwnProperty('default') ? axios['default'] : axios;

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var GiphyRandom = function () {
  createClass(GiphyRandom, null, [{
    key: 'URI',
    get: function get$$1() {
      return 'https://api.giphy.com/v1/gifs/random';
    }
  }]);

  function GiphyRandom() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        apiKey = _ref.apiKey,
        _ref$defaultRating = _ref.defaultRating,
        defaultRating = _ref$defaultRating === undefined ? 'G' : _ref$defaultRating,
        _ref$uri = _ref.uri,
        uri = _ref$uri === undefined ? GiphyRandom.URI : _ref$uri;

    classCallCheck(this, GiphyRandom);

    if (!apiKey) {
      throw new Error('The apiKey parameter is required.');
    }

    this.apiKey = apiKey;
    this.defaultRating = defaultRating;
    this.uri = uri;
  }

  createClass(GiphyRandom, [{
    key: 'get',
    value: function get$$1() {
      var _this = this;

      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          tag = _ref2.tag,
          _ref2$rating = _ref2.rating,
          rating = _ref2$rating === undefined ? this.defaultRating : _ref2$rating;

      var params = tag ? { api_key: this.apiKey, tag: tag, rating: rating } : { api_key: this.apiKey, rating: rating };

      return new Promise(function (resolve, reject) {
        axios.get(_this.uri, { params: params }).then(function (response) {
          return resolve(response.data.data);
        }).catch(function (error) {
          return reject(GiphyRandom.castToError(error));
        });
      });
    }
  }], [{
    key: 'castToError',
    value: function castToError(error) {
      if (error.response) {
        var _error$response$data$ = error.response.data.meta,
            msg = _error$response$data$.msg,
            status = _error$response$data$.status;


        return new Error('Failed requesting random GIF from Giphy: [' + status + '] ' + msg);
      }

      if (error.request) {
        return new Error('Failed requesting random GIF from Giphy, no response was received.');
      }

      return error;
    }
  }]);
  return GiphyRandom;
}();

return GiphyRandom;

})));
